name: Deploy CREATE_USER to EC2 (Ubuntu)

on:
  push:
    branches:
      - qa

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy project to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "
            mkdir -p ~/create-user"
          scp -r ./* ubuntu@${{ secrets.EC2_HOST }}:~/create-user

      - name: Crear archivo .env en EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << EOF
            echo "${{ secrets.ENV_FILE }}" > ~/create-user/.env
          EOF

      - name: Build and run Docker container
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'

            # Instalar Docker si no estÃ¡
            if ! command -v docker &> /dev/null; then
              echo "ðŸ”§ Instalando Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker \$USER
            else
              echo "âœ… Docker ya estÃ¡ instalado."
            fi

            cd ~/create-user

            # Eliminar contenedor anterior si existe
            sudo docker rm -f create-user || true

            # Construir la imagen desde cero
            sudo docker build --no-cache -t create-user .

            # Ejecutar contenedor con reinicio automÃ¡tico y .env
            sudo docker run -d \
              --name create-user \
              --env-file .env \
              -p 3002:3002 \
              --restart always \
              create-user
          EOF
